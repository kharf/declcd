// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/cert-manager/cert-manager/pkg/apis/meta/v1

package v1

// ConditionStatus represents a condition's status.
// +kubebuilder:validation:Enum=True;False;Unknown
#ConditionStatus: string // #enumConditionStatus

#enumConditionStatus:
	#ConditionTrue |
	#ConditionFalse |
	#ConditionUnknown

// ConditionTrue represents the fact that a given condition is true
#ConditionTrue: #ConditionStatus & "True"

// ConditionFalse represents the fact that a given condition is false
#ConditionFalse: #ConditionStatus & "False"

// ConditionUnknown represents the fact that a given condition is unknown
#ConditionUnknown: #ConditionStatus & "Unknown"

// A reference to an object in the same namespace as the referent.
// If the referent is a cluster-scoped resource (e.g. a ClusterIssuer),
// the reference instead refers to the resource with the given name in the
// configured 'cluster resource namespace', which is set as a flag on the
// controller component (and defaults to the namespace that cert-manager
// runs in).
#LocalObjectReference: {
	// Name of the resource being referred to.
	// More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
	name: string @go(Name)
}

// ObjectReference is a reference to an object with a given name, kind and group.
#ObjectReference: {
	// Name of the resource being referred to.
	name: string @go(Name)

	// Kind of the resource being referred to.
	// +optional
	kind?: string @go(Kind)

	// Group of the resource being referred to.
	// +optional
	group?: string @go(Group)
}

// A reference to a specific 'key' within a Secret resource.
// In some instances, `key` is a required field.
#SecretKeySelector: {
	#LocalObjectReference

	// The key of the entry in the Secret resource's `data` field to be used.
	// Some instances of this field may be defaulted, in others it may be
	// required.
	// +optional
	key?: string @go(Key)
}

// Used as a data key in Secret resources to store a CA certificate.
#TLSCAKey: "ca.crt"
